// @generated by protobuf-ts 2.9.4 with parameter long_type_string
// @generated from protobuf file "notifications-service.proto" (package "notifications", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message notifications.LinkTelegramRequest
 */
export interface LinkTelegramRequest {
    /**
     * @generated from protobuf field: string chatId = 2;
     */
    chatId: string;
    /**
     * @generated from protobuf field: string token = 3;
     */
    token: string;
}
/**
 * @generated from protobuf message notifications.LinkTelegramResponse
 */
export interface LinkTelegramResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class LinkTelegramRequest$Type extends MessageType<LinkTelegramRequest> {
    constructor() {
        super("notifications.LinkTelegramRequest", [
            { no: 2, name: "chatId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "token", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LinkTelegramRequest>): LinkTelegramRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.chatId = "";
        message.token = "";
        if (value !== undefined)
            reflectionMergePartial<LinkTelegramRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LinkTelegramRequest): LinkTelegramRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string chatId */ 2:
                    message.chatId = reader.string();
                    break;
                case /* string token */ 3:
                    message.token = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LinkTelegramRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string chatId = 2; */
        if (message.chatId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.chatId);
        /* string token = 3; */
        if (message.token !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.token);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message notifications.LinkTelegramRequest
 */
export const LinkTelegramRequest = new LinkTelegramRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LinkTelegramResponse$Type extends MessageType<LinkTelegramResponse> {
    constructor() {
        super("notifications.LinkTelegramResponse", []);
    }
    create(value?: PartialMessage<LinkTelegramResponse>): LinkTelegramResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<LinkTelegramResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LinkTelegramResponse): LinkTelegramResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: LinkTelegramResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message notifications.LinkTelegramResponse
 */
export const LinkTelegramResponse = new LinkTelegramResponse$Type();
/**
 * @generated ServiceType for protobuf service notifications.NotificationService
 */
export const NotificationService = new ServiceType("notifications.NotificationService", [
    { name: "LinkTelegram", options: {}, I: LinkTelegramRequest, O: LinkTelegramResponse }
]);
