services:
  notification-service:
    container_name: mzhn-notification-service
    restart: always
    build:
      context: ../notification-service/
    environment:
      WAIT_HOSTS: pg-es:5432
      APP_NAME: "notification"
      APP_VERSION: "1.0.0"

      PG_HOST: pg-ns
      PG_PORT: 5432
      PG_NAME: ${NOTIFICATION_SERVICE_PG_NAME}
      PG_USER: ${NOTIFICATION_SERVICE_PG_USER}
      PG_PASS: ${NOTIFICATION_SERVICE_PG_PASS}

      HTTP_ENABLED: true
      HTTP_PORT: 80
      GRPC_ENABLED: true
      GRPC_PORT: 7000

      AUTH_SERVICE_HOST: auth-service
      AUTH_SERVICE_PORT: 7000

      SUBSCRIPTION_SERVICE_HOST: subscriptions-service
      SUBSCRIPTION_SERVICE_PORT: 7000

      EVENT_SERVICE_HOST: event-service
      EVENT_SERVICE_PORT: 7000

      AMQP_HOST: rmq
      AMQP_PORT: ${AMQP_PORT}
      AMQP_USER: ${AMQP_USER}
      AMQP_PASS: ${AMQP_PASS}

      AMQP_NOTIFICATIONS_EXCHANGE: ${AMQP_NOTIFICATIONS_EXCHANGE}
      AMQP_UPCOMING_EVENTS_QUEUE: ${AMQP_UPCOMING_EVENTS_QUEUE}
      AMQP_NEW_EVENTS_EVENTS_QUEUE: ${AMQP_NEW_EVENTS_EVENTS_QUEUE}
      AMQP_NEW_SUBSCRIPTION_QUEUE: ${AMQP_NEW_SUBSCRIPTION_QUEUE}

      AMQP_SUBSCRIPTIONS_EXCHANGE: ${AMQP_SUBSCRIPTIONS_EXCHANGE}
      AMQP_TELEGRAM_QUEUE: ${AMQP_TELEGRAM_QUEUE}
      AMQP_MAIL_QUEUE: ${AMQP_MAIL_QUEUE}

      ENV: dev

    depends_on:
      - pg-ns
      - event-service
      - auth-service
      - subscriptions-service

    ports:
      - "${NOTIFICATION_SERVICE_HTTP_PORT}:80"
      - "${NOTIFICATION_SERVICE_GRPC_PORT}:7000"

  pg-ns:
    container_name: mzhn-notification-pg
    image: postgres:14.13-alpine3.20
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${NOTIFICATION_SERVICE_PG_NAME}
      POSTGRES_USER: ${NOTIFICATION_SERVICE_PG_USER}
      POSTGRES_PASSWORD: ${NOTIFICATION_SERVICE_PG_PASS}
    volumes:
      - pg-ns-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"

volumes:
  pg-ns-data:
    name: mzhn-ns-pg
