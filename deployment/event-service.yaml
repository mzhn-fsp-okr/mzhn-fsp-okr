services:
  event-service:
    container_name: mzhn-event-service
    restart: always
    build:
      context: ../event-service/
    environment:
      WAIT_HOSTS: pg-es:5432
      APP_NAME: "events"
      APP_VERSION: "1.0.0"

      PG_HOST: pg-es
      PG_PORT: 5432
      PG_NAME: ${EVENT_SERVICE_PG_NAME}
      PG_USER: ${EVENT_SERVICE_PG_USER}
      PG_PASS: ${EVENT_SERVICE_PG_PASS}

      HTTP_ENABLED: true
      HTTP_PORT: 80
      GRPC_ENABLED: true
      GRPC_PORT: 7000

      AUTH_SERVICE_HOST: auth-service
      AUTH_SERVICE_PORT: 7000

      AMQP_HOST: rmq
      AMQP_PORT: ${AMQP_PORT}
      AMQP_USER: ${AMQP_USER}
      AMQP_PASS: ${AMQP_PASS}
      AMQP_NEW_EVENTS_EVENTS_QUEUE: ${AMQP_NEW_EVENTS_EVENTS_QUEUE}
      AMQP_NOTIFICATIONS_EXCHANGE: ${AMQP_NOTIFICATIONS_EXCHANGE}

      ENV: prod
    depends_on:
      - pg-es
    ports:
      - "${EVENT_SERVICE_HTTP_PORT}:80"
      - "${EVENT_SERVICE_GRPC_PORT}:7000"

  pg-es:
    container_name: mzhn-event-pg
    image: postgres:14.13-alpine3.20
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${EVENT_SERVICE_PG_NAME}
      POSTGRES_USER: ${EVENT_SERVICE_PG_USER}
      POSTGRES_PASSWORD: ${EVENT_SERVICE_PG_PASS}
    volumes:
      - pg-es-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

volumes:
  pg-es-data:
    name: mzhn-es-pg
